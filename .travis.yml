cache:
  pip: true
  directories:
    - $HOME/.cache/pip
    - $HOME/.local

language: python

matrix:
  include:
    - os: linux
      python: 3.6
    - os: osx
      language: generic

install:
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      curl https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh > miniconda.sh;
      export TRAVIS_PYTHON_VERSION="3.6";
    else
      wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda config --add channels conda-forge
  - conda update -q conda
  - conda info -a

  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION
  - source activate test-environment
  - export MSP_CONDA_PREFIX="$HOME/miniconda/envs/test-environment"
  - conda install --yes --file=requirements/conda-minimal.txt
  - pip install -r requirements/tests-pypi.txt
  # We need to run build_ext here first as odd things happen with the tests on
  # version numbers otherwise.
  - python setup.py build_ext --inplace
  - pip install .

script:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      pytest -n `sysctl -n hw.ncpu` tests;
    else
      pytest -n `nproc` tests;
    fi
