name: Tests

on:
  pull_request:
  push:
    branches: [main, test]
  merge_group:

jobs:
  pre-commit:
    name: Lint
    uses: tskit-dev/.github/.github/workflows/lint.yml@v2

  test:
    name: Python
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python: [ "3.10", 3.13 ]
        os:  [ macos-latest, ubuntu-24.04, windows-latest ]
    defaults:
      run:
        shell: bash
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          submodules: true


      - name: Fix windows symlinks
        # This is horrible, but the "git config core.symlinks true" didn't work.
        if: matrix.os == 'windows-latest'
        run: |
          rm lwt_interface
          cp -r --dereference git-submodules/tskit/python/lwt_interface ./lwt_interface

      - name: Install GSL (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install gsl
        
      - name: Install GSL (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          vcpkg install gsl:x64-windows
        shell: powershell
        
      - name: Install GSL (Ubuntu)
        if: matrix.os == 'ubuntu-24.04'
        run: sudo apt-get update && sudo apt-get install -y libgsl-dev

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python }}
          version: "0.8.15"
      
      - name: Install pip deps
        run: | 
          uv venv
          uv pip install -r pyproject.toml --extra test

      - name: Install Windows build tools
        if: matrix.os == 'windows-latest'
        run: |
          uv pip install build delvewheel

      - name: Build module
        if: matrix.os != 'windows-latest'
        run: |
          uv run --no-sync python setup.py build_ext --inplace

      - name: Build and install repaired wheel (Windows)
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: |
          # Build wheel
          uv run --no-sync python -m build --wheel
          
          # Repair wheel with delvewheel (bundle DLLs)
          $vcpkgRoot = $env:VCPKG_ROOT
          if (-not $vcpkgRoot) { $vcpkgRoot = "C:\vcpkg" }
          $gslBinPath = Join-Path $vcpkgRoot "installed\x64-windows\bin"
          uv run --no-sync delvewheel repair dist/*.whl -w repaired_wheel/ --add-path "$gslBinPath"
          
          # Install the repaired wheel 
          uv pip install (Get-ChildItem repaired_wheel\*.whl | Select-Object -First 1).FullName --force-reinstall


      - name: Run tests
        run: |
          uv run --no-sync pytest -xvs -n0
